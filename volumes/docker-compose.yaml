version: "3.8"
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - ./docker_volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./docker_volumes/mongo_data:/data/db
  mysql:
    container_name: mysql_container
    image: mysql
    user: 1000:1000
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#updagrading
    # (this is just an example, not entended to be a production configuration)
    restart: always
    environment:
      MYSQL_USER: hustlr
      MYSQL_DATABASE: hustlr_auth
      MYSQL_ROOT_PASSWORD: api
      MYSQL_PASSWORD: api
    ports:
      - "3306:3306"
    volumes:
      - ./docker_volumes/mysql_data:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: hustlr
      POSTGRES_PASSWORD: api
      POSTGRES_DATABASE: hustlr_reviews
    ports:
      - "5432:5432"
    volumes:
      - ./docker_volumes/postgres_data:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:4.1-rc-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: hustlr
      RABBITMQ_DEFAULT_PASS: hustlrpass
    ports:
      # AMQP protocols port
      - "5672:5672"
      # Management UI
      - "15672:15672"
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./docker_volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.17.0
    restart: always
    environment:
      - ELASTICSEARCH_HOST=["http://elasticsearch_container:9200"]
    ports:
      - "5601:5601"
    networks:
      - elastic
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

  # all the microservices will be added here
  apigateway:
    container_name: api_gateway_container
    build:
      context: ../microservices/1-gateway-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "4000:4000"
    env_file: ../microservices/1-gateway-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - SERVER_PORT=4000
      - GATEWAY_JWT_TOKEN=1c43d4cf3360a4b103c3e8094da6e28b
      - JWT_TOKEN=8c2501bde4a9b325624a90338791b120
      - SECRET_KEY_ONE=aadce4582210bc9dfe636ad200b7c491
      - SECRET_KEY_TWO=20612bcd7ca9dc166a034c9b4f1755d6
      - CLIENT_URL=http://localhost:3000
      - AUTH_BASE_URL=http://localhost:4002
      - USERS_BASE_URL=http://localhost:4003
      - GIG_BASE_URL=http://localhost:4004
      - CHAT_BASE_URL=http://localhost:4005
      - ORDER_BASE_URL=http://localhost:4006
      - REVIEW_BASE_URL=http://localhost:4007
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_API_SECRET_TOKEN=
    depends_on:
      - elasticsearch
  notifications:
    container_name: notification_container
    build:
      context: ../microservices/2-notification-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "4001:4001"
    env_file: ../microservices/2-notification-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - SERVER_PORT=4001
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://hustlr:hustlrpass@rabbitmq_container:5672
      - SENDER_EMAIL=hannah.effertz49@ethereal.email
      - SENDER_EMAIL_PASSWORD=DVnawMDq8rHw2bsjyS
      - SENDER_EMAIL_HOST=smtp.ethereal.email
      - SENDER_EMAIL_PORT=587
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_API_SECRET_TOKEN=
    depends_on:
      - rabbitmq
      - elasticsearch

networks:
  elastic:
    name: elastic
